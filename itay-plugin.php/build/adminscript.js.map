{"version":3,"file":"adminscript.js","mappings":";;;;;;;;;;;;AAA8B;AAC9BA,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;EAC/D,IAAIF,eAAe,EAAE;IACnBA,eAAe,CAACD,gBAAgB,CAAC,OAAO,EAAE,UAAUI,CAAC,EAAE;MACrDA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAMC,MAAM,GAAGF,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC;MACrC,IAAI,CAACD,MAAM,EAAE;MACb,MAAME,YAAY,GAAGF,MAAM,CAACG,iBAAiB,CAACC,YAAY,CAAC,MAAM,CAAC;MAElE,MAAMC,OAAO,GAAGT,QAAQ,CAACU,gBAAgB,CAAC,oBAAoB,CAAC;MAC/DD,OAAO,CAACE,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;MAE9D,MAAMC,IAAI,GAAGf,QAAQ,CAACU,gBAAgB,CAAC,WAAW,CAAC;MACnDK,IAAI,CAACJ,OAAO,CAAEK,GAAG,IAAKA,GAAG,CAACH,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;MACrD,MAAMG,UAAU,GAAGjB,QAAQ,CAACC,aAAa,CAACK,YAAY,CAAC;MAEvDF,MAAM,CAACS,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;MAC9BD,UAAU,CAACJ,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;;;;;;;;;;ACjCF;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN0B","sources":["webpack://itay-plugin.php/./src/admin/js/myscript.js","webpack://itay-plugin.php/./src/admin/scss/mystyle.scss","webpack://itay-plugin.php/webpack/bootstrap","webpack://itay-plugin.php/webpack/runtime/make namespace object","webpack://itay-plugin.php/./src/admin/adminscript.js"],"sourcesContent":["import \"../scss/mystyle.scss\";\r\nwindow.addEventListener(\"DOMContentLoaded\", function () {\r\n  // store tabs variables\r\n  // const tabs = document.querySelectorAll(\"ul.nav-tabs>li\");\r\n  // tabs.forEach((tab) => {\r\n  //   tab.addEventListener(\"click\", function (e) {\r\n  //     e.preventDefault();\r\n  //     tabs.forEach((tabb) => tabb.classList.remove(\"active\"));\r\n  //     tab.classList.add(\"active\");\r\n  //     const target = e.target;\r\n  //     const targetPaneID = target.getAttribute('href');\r\n  //   });\r\n  // });\r\n\r\n  const navTabContainer = document.querySelector(\".nav.nav-tabs\");\r\n  if (navTabContainer) {\r\n    navTabContainer.addEventListener(\"click\", function (e) {\r\n      e.preventDefault();\r\n      const target = e.target.closest(\"li\");\r\n      if (!target) return;\r\n      const targetPaneID = target.firstElementChild.getAttribute(\"href\");\r\n\r\n      const navTabs = document.querySelectorAll(\".nav.nav-tabs > li\");\r\n      navTabs.forEach((navTab) => navTab.classList.remove(\"active\"));\r\n\r\n      const tabs = document.querySelectorAll(\".tab-pane\");\r\n      tabs.forEach((tab) => tab.classList.remove(\"active\"));\r\n      const clickedTab = document.querySelector(targetPaneID);\r\n\r\n      target.classList.add(\"active\");\r\n      clickedTab.classList.add(\"active\");\r\n    });\r\n  }\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./js/myscript.js\";\r\nimport \"../admin/scss/mystyle.scss\";\r\n"],"names":["window","addEventListener","navTabContainer","document","querySelector","e","preventDefault","target","closest","targetPaneID","firstElementChild","getAttribute","navTabs","querySelectorAll","forEach","navTab","classList","remove","tabs","tab","clickedTab","add"],"sourceRoot":""}